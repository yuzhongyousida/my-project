<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myself.mapper.UserMapper">
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, username, password, email, age, create_time, update_time
    </sql>

    <!-- 新增用户 -->
    <insert id="insert" parameterType="com.myself.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (username, password, email, age, create_time)
        VALUES (#{username}, #{password}, #{email}, #{age}, NOW())
    </insert>

    <!-- 根据ID查询 -->
    <select id="selectById" resultType="com.myself.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id}
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.myself.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        ORDER BY id DESC
    </select>

    <!-- 根据条件查询用户列表 -->
    <select id="getUsersByConditions" resultType="com.myself.entity.User" parameterType="com.myself.entity.User">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        <where>
            <if test="username != null">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="email != null">
                AND email LIKE CONCAT('%', #{email}, '%')
            </if>
            <if test="age != null">
                AND age = #{age}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.myself.entity.User">
        UPDATE user
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="age != null">age = #{age},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id}
    </delete>
</mapper>
